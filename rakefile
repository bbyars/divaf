require 'less' # sudo gem install less
require 'erb'

task :default => [:compile]

task :compile => [:compile_html, :compile_css] do
  FileUtils.cp_r 'javascripts', 'public'
  FileUtils.cp_r 'images', 'public'
end

task :compile_html do
  layout = File.open("templates/partials/layout.rhtml", "r").read
  process("*.rhtml", ".html") do |template|
    content = ERB.new(template).result(binding)
    ERB.new(layout).result(binding)
  end
end

task :compile_css do
  process("stylesheets/*.less", ".css") { |less| Less::Engine.new(less).to_css }
  ['screen', 'print', 'ie'].each { |f| FileUtils.cp "blueprint/blueprint/#{f}.css", 'public/stylesheets/blueprint' }
end

def process(template_path, compiled_extension, &block)
  FileList[template_path].each do |filename|
    old_extension = File.extname(filename)
    new_path = "public/" + filename.sub(/#{Regexp.quote(old_extension)}/, compiled_extension)
    puts "#{filename} => #{new_path}"
    compiled = yield(File.open(filename, 'r').read)
    File.open(new_path, 'w') { |f| f.write(compiled) }
  end
end

# Used for erb templates
TIMESTAMP = Time.now.strftime("%Y%m%d%H%M%S")

def css(filename, options={})
  options[:href] = "stylesheets/#{filename}?#{TIMESTAMP}"
  options[:rel] = "stylesheet"
  options[:type] = "text/css"
  "<link #{attrs(options)} />"
end

def img(filename, options)
  options[:src] = "images/#{filename}?#{TIMESTAMP}"
  "<img #{attrs(options)} />"
end

def script(filename, options)
  options[:src] = "javascripts/#{filename}?#{TIMESTAMP}"
  inline = options[:inline] || ''
  options.delete(:inline)
  "<script #{attrs(options)}>#{inline}</script>"
end

def attrs(options)
  options.collect { |key, value| %Q(#{key}="#{value}") }.join(" ")
end

